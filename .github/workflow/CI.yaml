

name: Build Step

on:
  push:        


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.6.2]
        

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present  

 

  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3

  run-linters:      
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true      
      

  Gitleaks_test:    
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2  



  Trivy_test:    
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'        
        trivy-config: trivy.yaml   
                  
          

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    needs: ['build', 'test-stage', 'Trivy_test', 'Gitleaks_test']

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}





      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: |
            yankogp/final_project:${{ github.sha }} 
            
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/yankogp/final_project:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
  
      

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
      - uses: actions/checkout@v3
        with:
          repository: yankogp/final_project_infra
          ref: 'main'
          token: ${{ secrets.GH_TOKEN }}
      - name: setup git config
        run: |
          git config --global user.email "y.patarchanov@gmail.com"
          git config --global user.name "yankogp"
          echo ${{ github.sha }}
          sed -i "s#${{ github.actor }}.*#${{ github.actor }}/final_project:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -am "Update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin main
